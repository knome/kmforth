
# https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/

@ "standard" ;

# :main { $A $B }
#   
#   0 pop
#   
#   [ { $escape }
#   
#     $escape.set
# 
#     1 pop
#   
#     $escape.get call
# 
#     2 pop
#   
#   ]
#   
#   $B.set
#   
#   $B.get stack/with-escape
#   
#   3 pop
#   
# ;

:main { $A }
    
    [ { $escape }
      
      $escape.set
      
      0 $A.set
      [
        # "hello" print
        # $A.get printno
        
        $A.get 1 + $A.set
        
        $A.get 200 >
        [ $escape.get call ]
        when
      
      ] recursor
    ] stack/with-escape
    
    "wat" print
    $A.get printno
;

# a simple infinite self-recurser that calls another function every frame deeper it gets
#
#[ <fn/0>
#[ 
:recursor
  dup call
  recursor
;
