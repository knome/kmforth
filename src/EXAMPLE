
@ "standard" ;

:main { $load $sw $onErrDie }
  
  &syscall/write $sw.set
  
  [ [ 100 exit ] when pop ] $onErrDie.set

  4096 16 *
  [ {$buffer $cursor $len}
    
    $buffer.copy
    $cursor.set
    
    [ $buffer.get 4096 16 * + $cursor.get - 4 > ]
    [
      121 $cursor.get memory/poke-b
      $cursor.incr
      101 $cursor.get memory/poke-b
      $cursor.incr
      115 $cursor.get memory/poke-b
      $cursor.incr
      10 $cursor.get memory/poke-b
      $cursor.incr
    ]
    while
    
    0 $cursor.get memory/poke-b
    $buffer.get strings/length $len.set
    
    [ $buffer.get $len.get 1 $sw.call $onErrDie.call ] loop
  ]
  stack/with-stack-buffer
;
