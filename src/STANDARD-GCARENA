
# region format
# 
# [ header ] 
# [ roots , ... ]
# [ ... , data  ]
# 
# [ givenSize  qword ] # what size the user requested
# [ actualSize qword ] # what size of the user request we could actually use ( clipped to nearest page )
# [ totalPages qword ] # how many pages does the memory arena have to play with?
# [ nRoots     qword ] # how many roots were requested for the arena?
# [ nObjects   qword ] # how many objects are currently in the arena?

:gc/-pagesize 4096 ;

# [: size
# [: arena
# 
:gc/arena { $size }
  
  dup $size.set                                              # [: size
  
  gc/-pagesize <                                             # [: (size<pagesize)
  [ "arenas must be at least a full page of memory" panic ]  # [: (size<pagesize) diefn
  $.callIf                                                   # [: 
  
  $size.get memory/map-region                                # [: buffer
  dup $size.get gc/-initialize-region                        # [: buffer
;

# [: buffer size
# [: 
# 
:gc/-initialize-region { $buffer }
  
  # $buffer.set                            # [: size
  # $buffer.get swap gc/-header/size.set   # [: 
  # $buffer.get gc/-header/pages
  
  "gc/-initialize-region incomplete" panic
;

# what could benefit our horrible little language more than a macro system?
# can macros create macros? oh hell yeah.
# combinatorial explosion from hell

