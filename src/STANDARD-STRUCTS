
# NAMED MACROS GENERATE FUNCTIONS AND MACROS
# INLINE MACROS SPRAY THEIR TOKENS DIRECTLY INTO THE FUNCTION THEY ARE EXPANDING IN
# INLINE MACROS ALWAYS FOLLOW A MACRO EXPANSION CHARACTER (@)
# NAMED MACROS AND MACROS THEY GENERATE START WITH A MACRO DEFINITION CHARACTER (%)

# there. this should be horrible enough to work.

# % define-structure ( @struct @fields )
#   @ define-structure/-define-initializer ( @struct @fields ) ;
#   @ define-structure/-define-fields ( @struct @fields ) ;
# ;
# 
# % define-structure/-define-initializer ( @struct @fields )
#   :@struct/-initialize  
#    @ ( (@fields) ( @field.each ) dup 0 @struct/@field.set )
#   ;
# ;
# 
# % define-structure/-define-fields ( @struct @field.each @fieldNo.expandno )
#   :@struct/@field.addr @fieldNo 8 * + ;
#   :@struct/@field.get  @struct/@field.addr memory/peek-q ;
#   :@struct/@field.set  swap @struct/@field.addr memory/poke-q ;
# ;
# 
# @ define-structure ( gc/-header ( givenSize actualSize totalPages nRoots nObjects ) ) ;
# 
# # :main
# #   @ ( ((hello yes this is dog)) ( @field.each ) "@field" write "\n" write )
# # ;
